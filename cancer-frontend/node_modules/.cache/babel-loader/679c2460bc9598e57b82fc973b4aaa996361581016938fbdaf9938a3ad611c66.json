{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacks\\\\Desktop\\\\Apps\\\\cancer\\\\cancer-frontend\\\\src\\\\components\\\\GanttChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart } from 'react-google-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GanttChart = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/projects');\n      setProjects(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      setLoading(false);\n    }\n  };\n  const prepareChartData = () => {\n    const data = [[{\n      type: 'string',\n      label: 'Task ID'\n    }, {\n      type: 'string',\n      label: 'Task Name'\n    }, {\n      type: 'date',\n      label: 'Start Date'\n    }, {\n      type: 'date',\n      label: 'End Date'\n    }, {\n      type: 'number',\n      label: 'Duration'\n    }, {\n      type: 'number',\n      label: 'Percent Complete'\n    }, {\n      type: 'string',\n      label: 'Dependencies'\n    }], ...projects.map(project => [project.id.toString(), project.name, new Date(project.start_date), new Date(project.end_date), null, project.progress, null])];\n    return data;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Gantt chart...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gantt-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Project Timeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: '100%',\n      height: '400px',\n      chartType: \"Gantt\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this),\n      data: prepareChartData(),\n      options: {\n        height: 400,\n        gantt: {\n          trackHeight: 30\n        }\n      },\n      rootProps: {\n        'data-testid': '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(GanttChart, \"OQ1VoVBkBYQ0DtEeE9la9LZgEb0=\");\n_c = GanttChart;\nexport default GanttChart;\nvar _c;\n$RefreshReg$(_c, \"GanttChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","jsxDEV","_jsxDEV","GanttChart","_s","projects","setProjects","loading","setLoading","fetchProjects","response","get","data","error","console","prepareChartData","type","label","map","project","id","toString","name","Date","start_date","end_date","progress","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","chartType","loader","options","gantt","trackHeight","rootProps","_c","$RefreshReg$"],"sources":["C:/Users/jacks/Desktop/Apps/cancer/cancer-frontend/src/components/GanttChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart } from 'react-google-charts';\n\nconst GanttChart = () => {\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/projects');\n      setProjects(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      setLoading(false);\n    }\n  };\n\n  const prepareChartData = () => {\n    const data = [\n      [\n        { type: 'string', label: 'Task ID' },\n        { type: 'string', label: 'Task Name' },\n        { type: 'date', label: 'Start Date' },\n        { type: 'date', label: 'End Date' },\n        { type: 'number', label: 'Duration' },\n        { type: 'number', label: 'Percent Complete' },\n        { type: 'string', label: 'Dependencies' },\n      ],\n      ...projects.map(project => [\n        project.id.toString(),\n        project.name,\n        new Date(project.start_date),\n        new Date(project.end_date),\n        null,\n        project.progress,\n        null\n      ])\n    ];\n    return data;\n  };\n\n  if (loading) return <div>Loading Gantt chart...</div>;\n\n  return (\n    <div className=\"gantt-chart\">\n      <h2 className=\"text-xl font-semibold mb-4\">Project Timeline</h2>\n      <Chart\n        width={'100%'}\n        height={'400px'}\n        chartType=\"Gantt\"\n        loader={<div>Loading Chart</div>}\n        data={prepareChartData()}\n        options={{\n          height: 400,\n          gantt: {\n            trackHeight: 30,\n          },\n        }}\n        rootProps={{ 'data-testid': '1' }}\n      />\n    </div>\n  );\n};\n\nexport default GanttChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}